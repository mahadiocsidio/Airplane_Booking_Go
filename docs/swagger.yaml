definitions:
  controllers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  controllers.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.Booking:
    properties:
      createdAt:
        type: string
      flightId:
        type: string
      id:
        type: string
      seats:
        description: 'seat numbers, ex: ["12A", "12B"]'
        items:
          $ref: '#/definitions/models.Seat'
        type: array
      status:
        description: pending, confirmed, cancelled
        type: string
      totalPrice:
        type: number
      updatedAt:
        type: string
      userId:
        type: string
    type: object
  models.Seat:
    properties:
      class:
        type: string
      isAvailable:
        type: boolean
      number:
        type: string
      price:
        type: number
    type: object
  validations.CreateBookingRequest:
    properties:
      flightId:
        type: string
      seatNumbers:
        items:
          type: string
        type: array
    required:
    - flightId
    - seatNumbers
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a backend for airplane booking system.
  title: Airplane_Booking API
  version: "1.0"
paths:
  /book:
    post:
      consumes:
      - application/json
      description: User creates a booking by selecting flight and seats
      parameters:
      - description: Booking request body
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/validations.CreateBookingRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Booking'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new booking
      tags:
      - booking
  /login:
    post:
      consumes:
      - application/json
      description: Login with email and password, returns JWT token
      parameters:
      - description: User login request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new account with name, email, and password
      parameters:
      - description: User registration request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
swagger: "2.0"
